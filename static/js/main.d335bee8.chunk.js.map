{"version":3,"sources":["components/SearchForm.js","components/AirQualitySummary.js","components/AirQualitySummaries.js","components/App.js","index.js"],"names":["SearchForm","setSearchText","searchText","onChangeHandler","onSuggestHandler","placeholder","suggestions","setSuggestions","className","length","id","value","onClick","type","onChange","e","target","onBlur","setTimeout","map","suggestion","i","location","city","name","AirQualitySummary","onSubmit","summary","moment","measurements","lastUpdated","fromNow","toUpperCase","parameter","AirQualitySummaries","summaries","App","useState","results","setResults","setSummaries","useEffect","axios","request","method","url","then","response","data","catch","error","console","log","text","a","filter","result","matches","regex","RegExp","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d335bee8.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchForm.scss\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst SearchForm = ({\n  setSearchText,\n  searchText,\n  onChangeHandler,\n  onSuggestHandler,\n  placeholder,\n  suggestions,\n  setSuggestions,\n}) => {\n  const clearInput = () => {\n    setSuggestions([]);\n    setSearchText(\"\");\n  };\n\n  const suggestionKey = (name, id) => {\n    return `${name}_${id}`;\n  };\n  return (\n    <div className=\"search\">\n      <div className=\"searchInputs\">\n        <div className=\"searchIcon\">\n          {searchText.length === 0 ? (\n            <SearchIcon />\n          ) : (\n            <ClearIcon id=\"clearBtn\" value={searchText} onClick={clearInput} />\n          )}\n        </div>\n\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={(e) => onChangeHandler(e.target.value)}\n          value={searchText}\n          className=\"input-box\"\n          onBlur={() => {\n            setTimeout(() => {\n              setSuggestions([]);\n            }, 100);\n          }}\n        />\n      </div>\n\n      {suggestions.length !== 0 && (\n        <div className=\"dataResult\">\n          {suggestions &&\n            suggestions.map((suggestion, i) => (\n              <div\n                key={suggestionKey(suggestion.location, i)}\n                className=\"dataItem\"\n                onClick={() => onSuggestHandler(suggestion.location)}\n              >\n                <p>{`${suggestion.location}, ${suggestion.city}`}</p>\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      country: PropTypes.string.isRequired,\n      measurements: PropTypes.arrayOf(\n        PropTypes.shape({\n          lastUpdated: PropTypes.string.isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired\n  ).isRequired,\n  searchText: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func.isRequired,\n  onSuggestHandler: PropTypes.func.isRequired,\n  setSuggestions: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n","/* eslint-disable */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/AirQualitySummary.scss\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport moment from \"moment\";\n\nconst AirQualitySummary = ({ onSubmit, summary, id }) => {\n  return (\n    <div className=\"summary\" key={summary.location}>\n      <div className=\"button-div\">\n        <button\n          type=\"submit\"\n          onClick={() => {\n            onSubmit(id);\n          }}\n          className=\"delete-button\"\n        >\n          <ClearIcon />\n        </button>\n      </div>\n      <p className=\"date\">\n        {`UPDATED\n            ${moment(summary.measurements[0].lastUpdated)\n              .fromNow()\n              .toUpperCase()}`}\n      </p>\n      <p className=\"location\">{summary.location}</p>\n      <p className=\"city\">in {summary.city}, United Kingdom</p>\n      <p className=\"values\">\n        {`Values:${summary.measurements.map(\n          (e) => ` ${e.parameter.toUpperCase()}: ${e.value}`\n        )}`}\n      </p>\n    </div>\n  );\n};\n\nAirQualitySummary.propTypes = {\n  summary: PropTypes.object.isRequired,\n  id: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AirQualitySummary;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AirQualitySummary from \"./AirQualitySummary\";\n\nconst AirQualitySummaries = ({ onSubmit, summaries }) => {\n  const summaryKey = (name, id) => {\n    return `${name}_${id}`;\n  };\n\n  return (\n    <div className=\"summaries\">\n      {summaries.map((summary, i) => (\n        <AirQualitySummary\n          summary={summary}\n          key={summaryKey(summary.location, i)}\n          id={i}\n          onSubmit={onSubmit}\n        />\n      ))}\n    </div>\n  );\n};\n\nAirQualitySummaries.propTypes = {\n  summaries: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      measurements: PropTypes.arrayOf(\n        PropTypes.shape({\n          lastUpdated: PropTypes.string.isRequired,\n          parameter: PropTypes.string.isRequired,\n          value: PropTypes.number.isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default AirQualitySummaries;\n","/* eslint-disable */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/App.scss\";\nimport SearchForm from \"./SearchForm\";\nimport AirQualitySummaries from \"./AirQualitySummaries\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .request({\n        method: \"GET\",\n        url: \"https://u50g7n0cbj.execute-api.us-east-1.amazonaws.com/v2/latest?limit=747&page=1&offset=0&sort=desc&radius=1000&country_id=GB&order_by=lastUpdated&dumpRaw=false\",\n      })\n      .then((response) => {\n        setResults(response.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const onChangeHandler = (text) => {\n    let matches = [];\n    if (text.length > 0) {\n      const cities = results.filter((result) => result.city != null);\n      matches = cities.filter((result) => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return result.city.match(regex);\n      });\n    }\n    setSuggestions(matches);\n    setSearchText(text);\n  };\n\n  const onSuggestHandler = async (text) => {\n    setSearchText(text);\n    setSuggestions([]);\n    const data = results.filter((result) => result.location === text);\n    setSummaries([...summaries, ...data]);\n  };\n\n  const deleteSummary = (id) => {\n    setSummaries(summaries.filter((summary, i) => i !== id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Compare your Air</h1>\n      <p className=\"app-subtitle1\">\n        Compare the air quality between cities in the UK.\n      </p>\n      <p className=\"app-subtitle2\">\n        Select cities to compare using the search tool below.\n      </p>\n      <SearchForm\n        searchText={searchText}\n        setSearchText={setSearchText}\n        results={results}\n        suggestions={suggestions}\n        setSuggestions={setSuggestions}\n        onChangeHandler={onChangeHandler}\n        onSuggestHandler={onSuggestHandler}\n        placeholder=\"Enter city name...\"\n      />\n      <AirQualitySummaries onSubmit={deleteSummary} summaries={summaries} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}