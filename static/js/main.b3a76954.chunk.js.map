{"version":3,"sources":["components/SearchForm.js","components/AirQualitySummary.js","components/App.js","index.js"],"names":["SearchForm","setSearchText","searchText","onChangeHandler","onSuggestHandler","placeholder","suggestions","setSuggestions","className","length","id","value","onClick","type","onChange","e","target","onBlur","setTimeout","map","suggestion","i","location","city","AirQualitySummary","onSubmit","summaries","dateFormatter","string","one","split","splice","join","two","three","secondHalf","measurementsFormatter","obj","measurements","parameter","toUpperCase","summary","lastUpdated","App","useState","results","setResults","setSummaries","useEffect","axios","request","method","url","then","response","data","catch","error","console","log","text","a","filter","result","matches","regex","RegExp","match","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3a76954.chunk.js","sourcesContent":["/* eslint-disable */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SearchForm.scss\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst SearchForm = ({\n  setSearchText,\n  searchText,\n  onChangeHandler,\n  onSuggestHandler,\n  placeholder,\n  suggestions,\n  setSuggestions,\n}) => {\n  const clearInput = () => {\n    setSuggestions([]);\n    setSearchText(\"\");\n  };\n  return (\n    <div className=\"search\">\n      <div className=\"searchInputs\">\n        <div className=\"searchIcon\">\n          {searchText.length === 0 ? (\n            <SearchIcon />\n          ) : (\n            <ClearIcon id=\"clearBtn\" value={searchText} onClick={clearInput} />\n          )}\n        </div>\n\n        <input\n          type=\"text\"\n          placeholder={placeholder}\n          onChange={(e) => onChangeHandler(e.target.value)}\n          value={searchText}\n          className=\"input-box\"\n          onBlur={() => {\n            setTimeout(() => {\n              setSuggestions([]);\n            }, 100);\n          }}\n        />\n      </div>\n\n      {suggestions.length !== 0 && (\n        <div className=\"dataResult\">\n          {suggestions &&\n            suggestions.map((suggestion, i) => (\n              <div\n                key={i}\n                className=\"dataItem\"\n                onClick={() => onSuggestHandler(suggestion.location)}\n              >\n                <p>\n                  {\" \"}\n                  {suggestion.location}, {suggestion.city}{\" \"}\n                </p>\n              </div>\n            ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchForm;\n\nSearchForm.propTypes = {\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      country: PropTypes.string.isRequired,\n      measurements: PropTypes.arrayOf(\n        PropTypes.shape({\n          lastUpdated: PropTypes.string.isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired\n  ).isRequired,\n  searchText: PropTypes.string.isRequired,\n  onChangeHandler: PropTypes.func.isRequired,\n  onSuggestHandler: PropTypes.func.isRequired,\n  setSuggestions: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n};\n","/* eslint-disable */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/AirQualitySummary.scss\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nconst AirQualitySummary = ({ onSubmit, summaries }) => {\n  const dateFormatter = (string) => {\n    const one = string.split(\"\").splice(8, 2).join(\"\");\n    const two = string.split(\"\").splice(5, 2).join(\"\");\n    const three = string.split(\"\").splice(0, 4).join(\"\");\n    const secondHalf = string.split(\"\").splice(11, 5).join(\"\");\n    return `${one}-${two}-${three} - ${secondHalf}`;\n  };\n\n  const measurementsFormatter = (obj) => {\n    let string = \"\";\n    for (let i = 0; i < obj.measurements.length - 1; i++) {\n      string += `${obj.measurements[i].parameter.toUpperCase()}: ${\n        obj.measurements[i].value\n      }, `;\n    }\n    return `${string} ${obj.measurements[\n      obj.measurements.length - 1\n    ].parameter.toUpperCase()}: ${\n      obj.measurements[obj.measurements.length - 1].value\n    }`;\n  };\n\n  return (\n    <div className=\"summaries\">\n      {summaries.map((summary) => (\n        <div className=\"summary\" key={summary.location}>\n          <div className=\"button-div\">\n            <button\n              type=\"submit\"\n              onClick={() => {\n                onSubmit(summary.location);\n              }}\n              className=\"delete-button\"\n            >\n              <ClearIcon />\n            </button>\n          </div>\n          <p className=\"date\">\n            LAST UPDATED: {dateFormatter(summary.measurements[0].lastUpdated)}\n          </p>\n          <p className=\"location\">{summary.location}</p>\n          <p className=\"city\">in {summary.city}, United Kingdom</p>\n          <p className=\"values\">Values: {measurementsFormatter(summary)}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nAirQualitySummary.propTypes = {\n  summaries: PropTypes.arrayOf(\n    PropTypes.shape({\n      city: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      measurements: PropTypes.arrayOf(\n        PropTypes.shape({\n          lastUpdated: PropTypes.string.isRequired,\n          parameter: PropTypes.string.isRequired,\n          value: PropTypes.number.isRequired,\n        }).isRequired\n      ).isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default AirQualitySummary;\n","/* eslint-disable */\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/App.scss\";\nimport SearchForm from \"./SearchForm\";\nimport AirQualitySummary from \"./AirQualitySummary\";\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [summaries, setSummaries] = useState([]);\n\n  useEffect(() => {\n    axios\n      .request({\n        method: \"GET\",\n        url: \"https://u50g7n0cbj.execute-api.us-east-1.amazonaws.com/v2/latest?limit=747&page=1&offset=0&sort=desc&radius=1000&country_id=GB&order_by=lastUpdated&dumpRaw=false\",\n      })\n      .then((response) => {\n        setResults(response.data.results);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const onChangeHandler = (text) => {\n    let matches = [];\n    if (text.length > 0) {\n      const cities = results.filter((result) => result.city != null);\n      matches = cities.filter((result) => {\n        const regex = new RegExp(`${text}`, \"gi\");\n        return result.city.match(regex);\n      });\n    }\n    setSuggestions(matches);\n    setSearchText(text);\n  };\n\n  const onSuggestHandler = async (text) => {\n    setSearchText(text);\n    setSuggestions([]);\n    const data = results.filter((result) => result.location === text);\n    setSummaries([...summaries, ...data]);\n  };\n\n  const deleteSummary = (e) => {\n    setSummaries(summaries.filter((summary) => summary.location !== e));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"app-title\">Compare your Air</h1>\n      <p className=\"app-subtitle1\">\n        Compare the air quality between cities in the UK.\n      </p>\n      <p className=\"app-subtitle2\">\n        Select cities to compare using the search tool below.\n      </p>\n      <SearchForm\n        searchText={searchText}\n        setSearchText={setSearchText}\n        results={results}\n        suggestions={suggestions}\n        setSuggestions={setSuggestions}\n        onChangeHandler={onChangeHandler}\n        onSuggestHandler={onSuggestHandler}\n        placeholder=\"Enter city name...\"\n      />\n      <AirQualitySummary onSubmit={deleteSummary} summaries={summaries} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}